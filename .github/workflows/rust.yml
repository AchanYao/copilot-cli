name: Rust Release

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build_and_release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            asset_name: copilot-cli
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            asset_name: copilot-cli.exe

    steps:
    - uses: actions/checkout@v3

    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        target: ${{ matrix.target }}
        override: true

    - name: Build Release
      run: cargo build --release --target ${{ matrix.target }}

    - name: Run tests
      run: cargo test --verbose --target ${{ matrix.target }}

    - name: Set up Release Please
      uses: google-github-actions/release-please-action@v4
      id: release-please
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        release-type: 'rust'

    - name: Create GitHub Release
      if: ${{ steps.release-please.outputs.release_created }}
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.release-please.outputs.tag }}
        release_name: ${{ steps.release-please.outputs.release_name }}
        body: ${{ steps.release-please.outputs.body }}

    - name: Upload Release Asset
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./target/${{ matrix.target }}/release/${{ matrix.asset_name }}
        asset_name: ${{ matrix.asset_name }}-${{ matrix.os }}-${{ env.RELEASE_VERSION }}
        asset_content_type: application/octet-stream
