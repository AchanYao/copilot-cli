name: Rust Release

on:
  push:
    branches: [ "main" ]

permissions:
  contents: write
  pull-requests: write

jobs:
  build_and_release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            asset_name: ubuntu-copilot-cli
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            asset_name: windows-copilot-cli.exe

    steps:
    - uses: actions/checkout@v3

    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        target: ${{ matrix.target }}
        override: true

    - name: Build Release
      run: cargo build --release --target ${{ matrix.target }}

    - name: Run tests
      run: cargo test --verbose --target ${{ matrix.target }}

    - name: Set up Release Please
      uses: google-github-actions/release-please-action@v4
      id: release-please
      with:
        token: ${{ secrets.RELEASE_TOKEN }}
        release-type: 'rust'

    - name: check tag exists
      shell: bash
      run: |
        echo "tag: ${{ steps.release-please.outputs.tag }}"
        if git rev-parse ${{ steps.release_please.outputs.tag }} >/dev/null 2>&1; then
          echo "::set-output name=tag_exists::true"
        else
          echo "::set-output name=tag_exists::false"
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Release Asset
      if: ${{ steps.release-please.outputs.tag_name }} && steps.check_tag.outputs.tag_exists == 'true'
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
      run:
        gh release upload ${{ steps.release-please.outputs.tag_name }} ./target/${{ matrix.target }}/release/${{ matrix.asset_name }} --clobber
